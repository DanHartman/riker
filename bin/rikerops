#!/usr/bin/env bash
set -euo pipefail
DIR="$( cd "$( dirname "${0}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME=$(basename "$0")
PROJECT_PATH="${DIR}/../projects/${SCRIPT_NAME}"
ROOT_PATH=${DIR}/../

bail () {
  printf "%s\n" "${1}" 1>&2
  exit 1
}

usage () {
  cat <<EOF
    Usage: rikerops <command>

    Run a one-off command inside the rikerops container in order
    to unify any and all environments

    Example Usage:
      rikerops node --version
EOF
}

# verify that any arguments were passed
test "$#" -eq 0 && bail "$(usage)"

# omit making docker command interactive if this appears in a pipeline
test -t 1 && USE_TTY="-it" || USE_TTY=""

# some specific deviation required for macos
test "$(docker version --format '{{json .Client.Os}}' | tr -d '"')" = "darwin" \
  && MAC_OS_ETCHOSTS="&& cat /machosts >> /etc/hosts" \
  || MAC_OS_ETCHOSTS=""

# run a command from within the ops container.
docker run --rm \
  --network host \
  --env-file <(unset SHELL HOME PATH TMPDIR && /usr/bin/env) \
  -v ${HOME}:/root \
  -v ${ROOT_PATH}:${ROOT_PATH} \
  -v /private/etc/hosts:/machosts \
  -w ${PWD} \
  ${USE_TTY} \
  ${SCRIPT_NAME} \
  /bin/bash -c "PATH=${ROOT_PATH}/bin:\${PATH} ${MAC_OS_ETCHOSTS} && $*"
